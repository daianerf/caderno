{
  "hash": "a6c8748b9a56e21dbc167e3e8721a8c4",
  "result": {
    "engine": "knitr",
    "markdown": "---\nformat: html\neditor: visual\n---\n\n\n\n# **Teste Não Paramétrico**\n\nOs testes não paramétricos são métodos estatísticos que não exigem que os dados sigam uma distribuição específica, como a normal. Por isso, são úteis quando as suposições dos testes paramétricos não são atendidas. Eles trabalham com dados em forma de postos (ordens) ou categorias e são ideais para amostras pequenas, dados assimétricos ou com *outliers*.\n\n**Exemplo:** conjunto *InsectSprays:* efeito de inseticida na mortalidade de insetos. Dados no pacote `datasets` do R.\n\n### Carregando o conjunto de dados\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninsects <- tibble::as_tibble(InsectSprays) |>\n  dplyr::select(spray, count)\ninsects\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 72 × 2\n   spray count\n   <fct> <dbl>\n 1 A        10\n 2 A         7\n 3 A        20\n 4 A        14\n 5 A        14\n 6 A        12\n 7 A        10\n 8 A        23\n 9 A        17\n10 A        20\n# ℹ 62 more rows\n```\n\n\n:::\n:::\n\n\n\n### Análise visual dos dados\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\ninsects |>\n  ggplot(aes(spray, count)) +\n  geom_boxplot(fill = \"lightblue\")\n```\n\n::: {.cell-output-display}\n![](nao_parametrica_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n\n## Teste - Modelo ANOVA\n\nQuando se analisa um conjunto de dados e esses dados apresentam-se como não paramétricos, deve-se trabalhar esses dados de uma forma diferente. Mas antes, deve-se comprovar por meio da anova e da checagem das premissas, que os dados realmente não são normais e homogêneos.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\naov2 <- aov(count ~ spray, data = insects)\nsummary(aov2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            Df Sum Sq Mean Sq F value Pr(>F)    \nspray        5   2669   533.8    34.7 <2e-16 ***\nResiduals   66   1015    15.4                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n\n\n\n### Checagem das premissas\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(performance)\ncheck_normality(aov2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nWarning: Non-normality of residuals detected (p = 0.022).\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_heteroscedasticity(aov2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nWarning: Heteroscedasticity (non-constant error variance) detected (p < .001).\n```\n\n\n:::\n:::\n\n\n\nA partir da checagem das premissas, observa-se que os dados não são normais e homogeneos.\n\n## **Alternativas para dados não paramétricos**\n\nQuando se tem dados não paramétricos, tem-se 3 alternativas:\n\n1.  Transformar os dados (Exemplo: raiz quadrada, log, Box cox);\n\n2.  Usar testes não paramétricos (*Kruskal-Wallis*);\n\n3.  Ou usar modelos lineares generalizados.\n\n### **1. Transformar os dados para normalizar**\n\nExemplo: Usando a raiz quadrada para tentar normalizar e tornar os dados normais e homogenos.\n\nPode-se também tentar o log da variável resposta + 0.5.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\naov2 <- aov(sqrt(count) ~ spray, data = insects)\nsummary(aov2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            Df Sum Sq Mean Sq F value Pr(>F)    \nspray        5  88.44  17.688    44.8 <2e-16 ***\nResiduals   66  26.06   0.395                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n\n\n\n#### Checagem das premissas\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_normality(aov2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nOK: residuals appear as normally distributed (p = 0.681).\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_heteroscedasticity(aov2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nOK: Error variance appears to be homoscedastic (p = 0.854).\n```\n\n\n:::\n:::\n\n\n\n### **2. Uso de testes não paramétricos**\n\nSe com as transformações não normalizar e ainda forem heterogêneos, usa-se testes não paramétricos.\n\nUma das saídas para normalizar os dados é a utilização do teste de *Kruskal-Wallis*. O teste de Kruskal-Wallis utiliza os valores numéricos transformados em postos e agrupados num só conjunto de dados, é testado se as amostras vêm de uma mesma população, ou se pelo menos uma delas vêm de população distinta das demais. O teste de Kruskal-Wallis dispensa a pressuposição de normalidade e homocedasticidade. Tem 2 opções de teste Kruskal. Para usar essa opção, é necessário baixar e carregar o pacote agricolae.\n\n#### Teste de *Kruskal-Wallis*\n\nÉ utilizado em situações onde queremos comparar mais de dois grupos independentes, de tamanhos iguais ou não, com variável resposta quantitativa. É uma alternativa quando os pressupostos necesários para o teste F da Anova não são atendidos, pois este teste dispensa a pressuposição de normalidade e homocedasticidade.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(agricolae)\n\nkruskal.test(count ~ spray, data = insects)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tKruskal-Wallis rank sum test\n\ndata:  count by spray\nKruskal-Wallis chi-squared = 54.691, df = 5, p-value = 1.511e-10\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nkruskal(insects$count, insects$spray, \n        console = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nStudy: insects$count ~ insects$spray\nKruskal-Wallis test's\nTies or no Ties\n\nCritical Value: 54.69134\nDegrees of freedom: 5\nPvalue Chisq  : 1.510845e-10 \n\ninsects$spray,  means of the ranks\n\n  insects.count  r\nA      52.16667 12\nB      54.83333 12\nC      11.45833 12\nD      25.58333 12\nE      19.33333 12\nF      55.62500 12\n\nPost Hoc Analysis\n\nt-Student: 1.996564\nAlpha    : 0.05\nMinimum Significant Difference: 8.462804 \n\nTreatments with the same letter are not significantly different.\n\n  insects$count groups\nF      55.62500      a\nB      54.83333      a\nA      52.16667      a\nD      25.58333      b\nE      19.33333     bc\nC      11.45833      c\n```\n\n\n:::\n:::\n\n\n\nO pacote `emmeans` é muito útil na análise de Modelos Lineares Generalizados (GLM), pois permite obter as médias marginais estimadas dos fatores no modelo.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\naov2 <- aov(count ~ spray, data = insects)\nsummary(aov2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            Df Sum Sq Mean Sq F value Pr(>F)    \nspray        5   2669   533.8    34.7 <2e-16 ***\nResiduals   66   1015    15.4                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n\n\n\n##### Checagem das premissas\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_normality(aov2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nWarning: Non-normality of residuals detected (p = 0.022).\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_heteroscedasticity(aov2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nWarning: Heteroscedasticity (non-constant error variance) detected (p < .001).\n```\n\n\n:::\n:::\n\n\n\nFunção `emmeans`: tirar a média da variável inseticida. Para dar o valor original da média e não o valor transformado, usa-se a função `type = response`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(emmeans)\naov2_means <- emmeans(aov2, ~ spray,\n                         type = \"response\")\naov2_means\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n spray emmean   SE df lower.CL upper.CL\n A      14.50 1.13 66   12.240    16.76\n B      15.33 1.13 66   13.073    17.59\n C       2.08 1.13 66   -0.177     4.34\n D       4.92 1.13 66    2.656     7.18\n E       3.50 1.13 66    1.240     5.76\n F      16.67 1.13 66   14.406    18.93\n\nConfidence level used: 0.95 \n```\n\n\n:::\n:::\n\n\n\nA função `pwpm` gera uma tabela de comparação das médias e `cld` é uma função que serve para gerar os números que diferenciam os grupos de médias.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npwpm(aov2_means)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        A       B       C       D       E       F\nA [14.50]  0.9952  <.0001  <.0001  <.0001  0.7542\nB  -0.833 [15.33]  <.0001  <.0001  <.0001  0.9603\nC  12.417  13.250 [ 2.08]  0.4921  0.9489  <.0001\nD   9.583  10.417  -2.833 [ 4.92]  0.9489  <.0001\nE  11.000  11.833  -1.417   1.417 [ 3.50]  <.0001\nF  -2.167  -1.333 -14.583 -11.750 -13.167 [16.67]\n\nRow and column labels: spray\nUpper triangle: P values   adjust = \"tukey\"\nDiagonal: [Estimates] (emmean)   type = \"response\"\nLower triangle: Comparisons (estimate)   earlier vs. later\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(MASS)\nlibrary(mvtnorm)\nlibrary(survival)\nlibrary(TH.data)\nlibrary(multcomp)\nlibrary(multcompView)\ncld(aov2_means)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n spray emmean   SE df lower.CL upper.CL .group\n C       2.08 1.13 66   -0.177     4.34  1    \n E       3.50 1.13 66    1.240     5.76  1    \n D       4.92 1.13 66    2.656     7.18  1    \n A      14.50 1.13 66   12.240    16.76   2   \n B      15.33 1.13 66   13.073    17.59   2   \n F      16.67 1.13 66   14.406    18.93   2   \n\nConfidence level used: 0.95 \nP value adjustment: tukey method for comparing a family of 6 estimates \nsignificance level used: alpha = 0.05 \nNOTE: If two or more means share the same grouping symbol,\n      then we cannot show them to be different.\n      But we also did not show them to be the same. \n```\n\n\n:::\n:::\n\n\n\n#### 3. **GLM – Modelos Lineares Generalizados**\n\nA função `glm` é utilizada para ajustar Modelos Lineares Generalizados no R. Esses modelos permitem trabalhar com diferentes distribuições de erro, como binomial, *Poisson* e outras, tornando possível a análise de variáveis resposta que não seguem uma distribuição normal. O modelo é definido por uma fórmula simbólica que relaciona a variável resposta aos preditores, e pela escolha de uma família de distribuição que representa o tipo de dado analisado. Para publicação de artigos, essa é a opção mais aconselhável.\n\nPara a geração de modelos, a função a ser utilizada é a `glm` e precisa indicar os argumentos f*amily = poisson(link = “identity”)*. Para visualizar, pode usar o pacote `Dharma` e gerar um plot.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(DHARMa)\n\nglm1 <- glm(count ~spray,\n             data = insects,\n             family = poisson(link = \"identity\"))\nplot(simulateResiduals(glm1))\n```\n\n::: {.cell-output-display}\n![](nao_parametrica_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(glm1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nglm(formula = count ~ spray, family = poisson(link = \"identity\"), \n    data = insects)\n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  14.5000     1.0992  13.191  < 2e-16 ***\nsprayB        0.8333     1.5767   0.529    0.597    \nsprayC      -12.4167     1.1756 -10.562  < 2e-16 ***\nsprayD       -9.5833     1.2720  -7.534 4.92e-14 ***\nsprayE      -11.0000     1.2247  -8.981  < 2e-16 ***\nsprayF        2.1667     1.6116   1.344    0.179    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 409.041  on 71  degrees of freedom\nResidual deviance:  98.329  on 66  degrees of freedom\nAIC: 376.59\n\nNumber of Fisher Scoring iterations: 3\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglm1_means <- emmeans(glm1, ~ spray)\ncld(glm1_means)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n spray emmean    SE  df asymp.LCL asymp.UCL .group\n C       2.08 0.417 Inf      1.27      2.90  1    \n E       3.50 0.540 Inf      2.44      4.56  12   \n D       4.92 0.640 Inf      3.66      6.17   2   \n A      14.50 1.100 Inf     12.35     16.65    3  \n B      15.33 1.130 Inf     13.12     17.55    3  \n F      16.67 1.180 Inf     14.36     18.98    3  \n\nConfidence level used: 0.95 \nP value adjustment: tukey method for comparing a family of 6 estimates \nsignificance level used: alpha = 0.05 \nNOTE: If two or more means share the same grouping symbol,\n      then we cannot show them to be different.\n      But we also did not show them to be the same. \n```\n\n\n:::\n:::\n",
    "supporting": [
      "nao_parametrica_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}