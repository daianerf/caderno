{
  "hash": "f8c9f4f9fc43dee77d6506b8c1a30576",
  "result": {
    "engine": "knitr",
    "markdown": "---\nformat: html\neditor: visual\n---\n\n\n\n\n# **Análise de Regressão**\n\nA análise de regressão é uma técnica estatística utilizada para examinar a relação entre variáveis por meio da construção de um modelo matemático. Quando os dados são quantitativos, ela costuma ser mais indicada que a análise de variância (ANOVA), pois permite descrever e prever a relação entre uma variável dependente (Y) e uma ou mais variáveis independentes (X).\n\nO objetivo é estimar os parâmetros de uma equação que represente essa relação funcional. Com isso, é possível identificar a direção e a intensidade do efeito das variáveis independentes sobre a variável resposta, além de realizar previsões para novos casos.\n\n# **Regressão linear simples**\n\nNa análise de regressão linear, parte-se do pressuposto de que existe uma relação linear entre a variável dependente e a variável independente, ou seja, essa relação pode ser representada por uma linha reta. A equação geral da regressão linear é:\\\n\n**y = β₀ + β₁x + ε**, onde:\n\n-   *y* representa a variável dependente (ou resposta);\n\n-   *x* é a variável independente (ou preditora);\n\n-   *β₀* é o intercepto da reta (valor de *y* quando *x = 0*);\n\n-   *β₁* é o coeficiente angular (inclinação da reta);\n\n-   *ε* é o termo de erro aleatório;\n\nNa regressão linear simples, o principal objetivo é testar se o coeficiente de inclinação (*β₁*) é significativamente diferente de zero. Esse teste indica se há evidência estatística de uma associação linear entre as variáveis. Um valor de *p* pequeno (geralmente \\< 0,05) sugere que a inclinação é significativamente diferente de zero, indicando uma relação linear entre *x* e *y*.\n\n### Carregando pacotes e importando o conjunto de dados\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Passo 1: Carregar pacotes e importar dados\nlibrary(gsheet)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(lme4)\nlibrary(car) # para Anova()\nlibrary(readxl)\n\n# Importar dados - Google Sheets\n\n# estande <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=401662555#gid=401662555\") ou:\n\n\nestande <- read_excel(\"dados-diversos.xlsx\", \"estande\") # Planilha excel\n```\n:::\n\n\n\n\n### Visualizar distribuição geral com regressão\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Gráfico geral para visualizar a relação entre tratamento e número de plantas\nestande |>\n  ggplot(aes(trat, nplants)) +\n  geom_point(color = \"blue\") + # Pontos individuais\n  geom_smooth(method = \"lm\", se = FALSE, color = \"black\") + # Linha de regressão\n  facet_wrap(~ exp) + # Um gráfico por experimento\n  theme_minimal() + # Tema limpo\n  labs(\n    x = \"% de inóculo na semente\",\n    y = \"Número de plantas\"\n  )\n```\n\n::: {.cell-output-display}\n![](regressao_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Para ajustar para uma regressão linear usa-se o argumento method = “lm” dentro da função geom_smooth.\n```\n:::\n\n\n\n\n## **Modelo de melhor ajuste**\n\nDeve-se testar o modelo que melhor se ajusta aos dados. Pode-se testar fazer a análise de regressão para cada experimento (isola cada experimento) ou analisar em grupos (modelos mistos).\n\n#### Análise de regressão por experimento\n\n**Analisando cada experimento isoladamente:**\n\nÉ preciso criar um novo objeto de dados, chamado `exp1`, atribuindo a ele o conjunto `estande`. Em seguida, deve-se filtrar o experimento de interesse e gerar um novo objeto com esse subconjunto, o que possibilita a execução da análise de regressão.\n\n**Experimento 1:**\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filtrar experimento 1 e calcular média por tratamento\nexp1 <- estande |>\n  filter(exp == 1) |>\n  group_by(trat) |>\n  summarise(nplants2 = mean(nplants, na.rm = TRUE))\n\n# Gráfico da média\nexp1 |>\n  ggplot(aes(trat, nplants2)) +\n  geom_point() +\n  ylim(20, 60)\n```\n\n::: {.cell-output-display}\n![](regressao_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Regressão linear com bloco (precisa existir a variável 'bloco')\nexp1_model <- estande |>\n  filter(exp == 1)\n\nm_exp1 <- lm(nplants ~ trat + bloco, data = exp1_model)\nsummary(m_exp1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = nplants ~ trat + bloco, data = exp1_model)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-18.0769  -6.7847  -0.7817   4.0522  22.6091 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  75.5833     5.7164  13.222 1.19e-11 ***\ntrat         -0.2419     0.1323  -1.829 0.081623 .  \nbloco        -9.2333     1.9485  -4.739 0.000111 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 10.67 on 21 degrees of freedom\nMultiple R-squared:  0.5513,\tAdjusted R-squared:  0.5086 \nF-statistic:  12.9 on 2 and 21 DF,  p-value: 0.0002216\n```\n\n\n:::\n:::\n\n\n\n\nFoi ajustado um modelo linear para avaliar o efeito do tratamento e do bloco sobre o número de plantas. O modelo apresentou um bom ajuste, explicando cerca de 55% da variação nos dados (R² = 0,55). O efeito do bloco foi altamente significativo (p \\< 0,001), indicando variações importantes entre os blocos experimentais. Já o efeito do tratamento foi marginalmente significativo (p = 0,082), sugerindo uma possível tendência de diferença entre tratamentos, embora com menor evidência estatística. O erro padrão residual foi de 10,67, e o modelo geral foi significativo pelo teste F (p \\< 0,001).\n\n**Experimento 2:**\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexp2 <- estande |>\n  filter(exp == 2)\n\nm_exp2 <- lm(nplants ~ trat, data = exp2)\nsummary(m_exp2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = nplants ~ trat, data = exp2)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-25.7816  -7.7150   0.5653   8.1929  19.2184 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  60.9857     3.6304  16.798 4.93e-14 ***\ntrat         -0.7007     0.1605  -4.365 0.000247 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 12.95 on 22 degrees of freedom\nMultiple R-squared:  0.4641,\tAdjusted R-squared:  0.4398 \nF-statistic: 19.05 on 1 and 22 DF,  p-value: 0.0002473\n```\n\n\n:::\n:::\n\n\n\n\nFoi ajustado um modelo linear para avaliar o efeito do tratamento (`trat`) sobre o número de plantas (`nplants`). O modelo apresentou um bom ajuste, explicando cerca de 46% da variação observada (R² = 0,46). O tratamento teve efeito estatisticamente significativo (p \\< 0,001), com uma estimativa de redução de 0,70 plantas por unidade do fator `trat`. O modelo como um todo foi altamente significativo (p \\< 0,001), indicando que `trat` é um fator importante na determinação do número de plantas nesta análise.\n\n**Experimento 3:**\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexp3 <- estande |>\n  filter(exp == 3)\n\nm_exp3 <- lm(nplants ~ trat, data = exp3)\nsummary(m_exp3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = nplants ~ trat, data = exp3)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-26.5887  -3.9597   0.7177   5.5806  19.8952 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  95.7500     2.9529  32.425  < 2e-16 ***\ntrat         -0.7634     0.1306  -5.847 6.97e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 10.53 on 22 degrees of freedom\nMultiple R-squared:  0.6085,\tAdjusted R-squared:  0.5907 \nF-statistic: 34.19 on 1 and 22 DF,  p-value: 6.968e-06\n```\n\n\n:::\n:::\n\n\n\n\nFoi ajustado um modelo linear simples para investigar o efeito do tratamento sobre o número de plantas no experimento 3. O modelo apresentou um ajuste estatisticamente significativo (p \\< 0,001), explicando aproximadamente 61% da variação nos dados (R² = 0,61). O efeito do tratamento também foi altamente significativo (p \\< 0,001), com uma estimativa de redução média de 0,76 plantas para cada unidade de `trat`. O valor médio estimado de plantas no grupo de referência foi 95,75. O erro padrão residual foi de 10,53, indicando um bom ajuste aos dados.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(report)\nreport(m_exp3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nWe fitted a linear model (estimated using OLS) to predict nplants with trat\n(formula: nplants ~ trat). The model explains a statistically significant and\nsubstantial proportion of variance (R2 = 0.61, F(1, 22) = 34.19, p < .001, adj.\nR2 = 0.59). The model's intercept, corresponding to trat = 0, is at 95.75 (95%\nCI [89.63, 101.87], t(22) = 32.43, p < .001). Within this model:\n\n  - The effect of trat is statistically significant and negative (beta = -0.76,\n95% CI [-1.03, -0.49], t(22) = -5.85, p < .001; Std. beta = -0.78, 95% CI\n[-1.06, -0.50])\n\nStandardized parameters were obtained by fitting the model on a standardized\nversion of the dataset. 95% Confidence Intervals (CIs) and p-values were\ncomputed using a Wald t-distribution approximation.\n```\n\n\n:::\n:::\n\n\n\n\n#### Modelo misto - Exemplo\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Modelo misto com efeitos aleatórios de experimento e bloco\nm_misto <- lmer(nplants ~ trat + (1 | exp/bloco), data = estande)\n\n# Intervalos de confiança e sumário do modelo\nconfint(m_misto)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                 2.5 %     97.5 %\n.sig01       3.3332097 14.4218422\n.sig02       7.2377419 47.8269818\n.sigma       9.7314178 13.9359486\n(Intercept) 43.4631239 96.0274587\ntrat        -0.7328972 -0.4044812\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(m_misto)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nLinear mixed model fit by REML ['lmerMod']\nFormula: nplants ~ trat + (1 | exp/bloco)\n   Data: estande\n\nREML criterion at convergence: 575.8\n\nScaled residuals: \n     Min       1Q   Median       3Q      Max \n-2.21697 -0.63351  0.04292  0.67094  1.92907 \n\nRandom effects:\n Groups    Name        Variance Std.Dev.\n bloco:exp (Intercept)  54.76    7.40   \n exp       (Intercept) 377.43   19.43   \n Residual              134.99   11.62   \nNumber of obs: 72, groups:  bloco:exp, 12; exp, 3\n\nFixed effects:\n            Estimate Std. Error t value\n(Intercept) 69.74524   11.57191   6.027\ntrat        -0.56869    0.08314  -6.840\n\nCorrelation of Fixed Effects:\n     (Intr)\ntrat -0.111\n```\n\n\n:::\n\n```{.r .cell-code}\n# ANOVA para verificar significância dos efeitos fixos\nAnova(m_misto) # com A maiúsculo\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAnalysis of Deviance Table (Type II Wald chisquare tests)\n\nResponse: nplants\n      Chisq Df Pr(>Chisq)    \ntrat 46.788  1  7.909e-12 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n\n\n\n\n#### Gráfico com linhas de regressão manuais\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Gráfico com diferentes linhas de regressão para comparação\nestande |>\n  ggplot(aes(trat, nplants, color = factor(exp))) +\n  geom_point() +\n  geom_abline(intercept = 69.74, slope = -0.568, linewidth = 2) + # Linha principal\n  geom_abline(intercept = 43, slope = -0.73, linetype = \"dashed\") + # Linha comparativa\n  geom_abline(intercept = 96, slope = -0.40, linetype = \"dashed\")   # Outra linha comparativa\n```\n\n::: {.cell-output-display}\n![](regressao_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n\n## **Modelo misto**\n\nEm um modelo misto, as observações são organizadas em grupos ou subgrupos, e cada um desses grupos pode apresentar efeitos aleatórios e/ou fixos distintos, conforme a estrutura dos dados. Por exemplo, quando os dados são coletados em diferentes localidades geográficas, é comum incluir um efeito aleatório para cada local, como ocorre no conjunto de dados estande.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(lme4)\nmix <- lmer(nplants ~trat + (trat | exp),\n            data = estande)\nsummary(mix)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nLinear mixed model fit by REML ['lmerMod']\nFormula: nplants ~ trat + (trat | exp)\n   Data: estande\n\nREML criterion at convergence: 580.8\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-2.0988 -0.6091  0.1722  0.6360  1.9963 \n\nRandom effects:\n Groups   Name        Variance  Std.Dev. Corr \n exp      (Intercept) 510.68405 22.5983       \n          trat          0.05516  0.2349  -0.82\n Residual             167.91303 12.9581       \nNumber of obs: 72, groups:  exp, 3\n\nFixed effects:\n            Estimate Std. Error t value\n(Intercept)  69.7452    13.2146   5.278\ntrat         -0.5687     0.1643  -3.462\n\nCorrelation of Fixed Effects:\n     (Intr)\ntrat -0.731\noptimizer (nloptwrap) convergence code: 0 (OK)\nModel failed to converge with max|grad| = 0.00274249 (tol = 0.002, component 1)\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(car)\nAnova(mix)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAnalysis of Deviance Table (Type II Wald chisquare tests)\n\nResponse: nplants\n      Chisq Df Pr(>Chisq)    \ntrat 11.985  1  0.0005362 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n\n\n\n\nQuando se usa o modelo misto, considera que todos os experimentos são agrupados, então considera que amostra é aleatória. Para fazer o modelo de regressão em grupo (misto) acrescenta-se na função aestetic o argumento group = exp.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nestande <- read_excel(\"dados-diversos.xlsx\", \"estande\")\nestande |>\n  ggplot(aes(trat, nplants, group = exp))+\n  geom_point()+\n  #facet_wrap(~ exp)+\n  geom_smooth(se =  F, method = \"lm\")\n```\n\n::: {.cell-output-display}\n![](regressao_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n\nDe modo geral, os modelos mistos são mais eficazes do que aqueles que analisam cada experimento separadamente, pois conseguem considerar a variação tanto entre os experimentos quanto dentro deles. Além disso, esses modelos permitem analisar os dados de forma integrada, preservando informações importantes sobre a estrutura hierárquica dos dados.\n\n## **Modelo GLM**\n\nO modelo linear generalizado (GLM) é uma extensão do modelo linear tradicional que possibilita trabalhar com diferentes tipos de variáveis resposta, tanto categóricas quanto contínuas. Além disso, o GLM permite que a relação entre a variável resposta e as explicativas seja não linear, ou seja, não está restrito à suposição de uma relação linear entre elas.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm1 <- lm(nplants ~ trat, data = exp3)\nsummary(lm1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = nplants ~ trat, data = exp3)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-26.5887  -3.9597   0.7177   5.5806  19.8952 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  95.7500     2.9529  32.425  < 2e-16 ***\ntrat         -0.7634     0.1306  -5.847 6.97e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 10.53 on 22 degrees of freedom\nMultiple R-squared:  0.6085,\tAdjusted R-squared:  0.5907 \nF-statistic: 34.19 on 1 and 22 DF,  p-value: 6.968e-06\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglm1 <- stats::glm(nplants ~ trat, family = stats::gaussian(), data = exp3)\n\nglm2 <- stats::glm(nplants ~ trat, family = stats::poisson(link = \"log\"), data = exp3)\n\nAIC(glm1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 185.0449\n```\n\n\n:::\n\n```{.r .cell-code}\nAIC(glm2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 183.9324\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nAIC(glm2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 183.9324\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(glm1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nstats::glm(formula = nplants ~ trat, family = stats::gaussian(), \n    data = exp3)\n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  95.7500     2.9529  32.425  < 2e-16 ***\ntrat         -0.7634     0.1306  -5.847 6.97e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for gaussian family taken to be 110.9787)\n\n    Null deviance: 6235.8  on 23  degrees of freedom\nResidual deviance: 2441.5  on 22  degrees of freedom\nAIC: 185.04\n\nNumber of Fisher Scoring iterations: 2\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(glm2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nstats::glm(formula = nplants ~ trat, family = stats::poisson(link = \"log\"), \n    data = exp3)\n\nCoefficients:\n             Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  4.571590   0.029539 154.762  < 2e-16 ***\ntrat        -0.009965   0.001488  -6.697 2.13e-11 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 77.906  on 23  degrees of freedom\nResidual deviance: 29.952  on 22  degrees of freedom\nAIC: 183.93\n\nNumber of Fisher Scoring iterations: 4\n```\n\n\n:::\n:::\n\n\n\n\nO modelo linear generalizado com distribuição gaussiana (`family = gaussian`) é indicado quando a variável resposta é contínua e segue uma distribuição normal, funcionando de forma equivalente ao modelo linear clássico (`lm`). Por outro lado, o modelo com distribuição de *Poisson* (`family = poisson`) é apropriado quando a variável resposta é um número inteiro não negativo e segue uma distribuição de *Poisson.*\n\nO critério AIC (*Akaike’s Information Criterion*) é utilizado para selecionar o melhor modelo entre várias opções, considerando tanto o ajuste aos dados quanto a complexidade do modelo. Modelos com valores menores de AIC são preferíveis, pois indicam um equilíbrio melhor entre precisão e simplicidade. No caso dos dados analisados, o modelo com família Poisson apresentou o menor AIC, indicando ser o mais adequado.\n\n# **Regressão não-linear**\n\nQuando a relação entre as variáveis independentes e a variável dependente não pode ser representada por uma linha reta, é necessário recorrer à regressão não linear. Esse tipo de análise é apropriado quando os dados apresentam padrões que não podem ser adequadamente modelados por uma função linear, permitindo capturar relações mais complexas entre as variáveis.\n\n### Carregar pacotes e importar dados\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Pacote para importar tabela do Google Sheets\nlibrary(gsheet)\n\n# Importar dados\nfungi <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=465348652#gid=465348652\")\n```\n:::\n\n\n\n\n### Visualizar os dados para todos os fungos\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(ggplot2)\n\n# Agrupar por fungo e dose, calcular média de germinação\nfungi_summary <- fungi |>\n  group_by(code, dose) |>\n  summarise(germination = mean(germination, na.rm = TRUE), .groups = \"drop\")\n\n# Plotar a germinação por dose para cada fungo\nfungi_summary |>\n  ggplot(aes(x = dose, y = germination)) +\n  geom_point() +\n  geom_line() +\n  facet_wrap(~ code) +\n  theme_minimal() +\n  labs(title = \"Germinação por dose para cada fungo\",\n       x = \"Dose\",\n       y = \"Germinação média\")\n```\n\n::: {.cell-output-display}\n![](regressao_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n\n\n### Selecionar um fungo específico para ajustar modelos (exemplo: FGT43)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filtrar dados para o fungo FGT43\nFGT43 <- fungi_summary |>\n  filter(code == \"FGT43\")\n```\n:::\n\n\n\n\n### Ajustar modelos de regressão não linear usando o pacote `drc`\n\nO pacote `drc` é amplamente utilizado para o ajuste de modelos de regressão em estudos de dose-resposta. Ele oferece uma variedade de modelos, como log-logístico, log-probit, Weibull, entre outros, permitindo representar com precisão a relação entre a dose aplicada e a resposta observada. Além disso, o pacote disponibiliza funções para a estimativa de parâmetros importantes, como o EC50 (dose efetiva para 50% da resposta máxima).\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(drc)\n\n# Ajustar modelo Weibull 2.3\nm_wb <- drm(germination ~ dose,\n            data = FGT43,\n            fct = W2.3())\n\n# Ajustar modelo log-logístico 3 parâmetros (LL.3)\nm_ll3 <- drm(germination ~ dose,\n             data = FGT43,\n             fct = LL.3())\n\n# Comparar AIC para escolher o melhor modelo\nAIC(m_wb)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 32.34994\n```\n\n\n:::\n\n```{.r .cell-code}\nAIC(m_ll3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 26.7762\n```\n\n\n:::\n\n```{.r .cell-code}\n# Resumo do melhor modelo (exemplo: LL.3)\nsummary(m_ll3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nModel fitted: Log-logistic (ED50 as parameter) with lower limit at 0 (3 parms)\n\nParameter estimates:\n\n               Estimate Std. Error t-value   p-value    \nb:(Intercept)  1.219692   0.175081  6.9664  0.006069 ** \nd:(Intercept) 48.486911   1.456007 33.3013 5.952e-05 ***\ne:(Intercept)  0.495895   0.060851  8.1494  0.003864 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error:\n\n 1.636105 (3 degrees of freedom)\n```\n\n\n:::\n\n```{.r .cell-code}\n# Plotar ajuste do modelo LL.3\nplot(m_ll3, main = \"Ajuste do modelo LL.3 para FGT43\")\n```\n\n::: {.cell-output-display}\n![](regressao_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n\n\n### Estimar a concentração efetiva EC50 a partir do modelo\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Estimar EC50 (dose para 50% do efeito)\nED(m_ll3, 50, interval = \"delta\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nEstimated effective doses\n\n       Estimate Std. Error    Lower    Upper\ne:1:50 0.495895   0.060851 0.302241 0.689550\n```\n\n\n:::\n:::\n\n\n\n\n### Estimar EC50 para todos os fungos de uma vez (pacote `ec50estimator`)\n\nA função do pacote `ec50estimator` permite calcular os valores de EC50 de forma prática e eficiente. Esses valores representam a dose necessária para atingir 50% da resposta máxima e são especialmente úteis para comparar a sensibilidade entre diferentes identificadores (ID). Com isso, é possível identificar variações na resposta à dose entre tratamentos, linhagens ou isolados, o que auxilia na avaliação da eficácia ou resistência em diferentes grupos.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Instale o pacote se ainda não tiver: install.packages(\"ec50estimator\")\nlibrary(ec50estimator)\n\n# Estima EC50 para cada fungo (isolate_col = \"code\"), podendo estratificar por estado (strata_col)\ndf_ec50 <- estimate_EC50(germination ~ dose,\n                         data = fungi,\n                         isolate_col = \"code\",\n                         strata_col = \"state\",  # pode omitir se não tiver\n                         interval = \"delta\",\n                         fct = drc::LL.3())\n```\n:::\n\n\n\n\n### Visualizar os resultados da estimativa EC50\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\n# Gráfico de pontos ordenando pelo valor da estimativa (menor para maior EC50)\ndf_ec50 |>\n  ggplot(aes(x = reorder(ID, Estimate), y = Estimate)) +\n  geom_point() +\n  coord_flip() +\n  labs(x = \"Fungos (ordenados por EC50)\", y = \"EC50 estimado\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](regressao_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Histograma da distribuição dos valores EC50\ndf_ec50 |>\n  ggplot(aes(x = Estimate)) +\n  geom_histogram(bins = 5, color = \"black\", fill = \"steelblue\") +\n  labs(title = \"Distribuição dos valores EC50 estimados\", x = \"EC50\", y = \"Frequência\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](regressao_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\n\n\n### Exemplo 2:\n\nRegressão não-linar para determinação de EC50.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Carregando pacotes\nlibrary(ggplot2)\nlibrary(gsheet)\nlibrary(dplyr)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#importando o comjunto de dados\ndat <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/15pCj0zljvd-TGECe67OMt6sa21xO8BqUgv4d-kU8qi8/edit#gid=0\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\noptions(scipen = 999)\n\ndat2 <- dat |> \n  dplyr::select(-Isolate, Population) |> \n  group_by(Code, Year, Dose) |> \n  summarise(GC_mean = mean(GC), .groups = \"drop\")\n```\n:::\n\n\n\n\nO comando `options(scipen = 999)` ajusta a opção `scipen`, que controla a exibição de números em notação científica. Ao definir esse valor como 999, o R passa a exibir números longos em formato decimal comum, evitando a notação exponencial.\n\nEm seguida, o bloco de código realiza as seguintes operações sobre o dataframe `dat`:\n\n-   Remove as colunas `Isolate` e `Population`, que não farão parte do novo conjunto de dados.\n\n-   Agrupa os dados pelas variáveis `Code`, `Year` e `Dose`.\n\n-   Calcula a média da variável `GC` para cada combinação desses grupos.\n\n-   Armazena o resultado em um novo dataframe chamado `dat2`, criando uma nova coluna chamada `GC_mean`, que contém a média de `GC` dentro de cada grupo.\n\nEssas operações são úteis para resumir os dados e preparar o conjunto para análises posteriores.\n\n**Exemplo:** gráfico só com um dos isolados - FGT152\n\nCriou-se um gráfico usando o dataframe FGT152, que é um subconjunto dos dados filtrados do `dat2`. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nFGT152 <- dat2 |>\n  filter(Code == \"FGT152\")\n\nFGT152 |>\n  ggplot(aes(factor(Dose), GC_mean))+\n  geom_point()+\n  geom_line()+\n  facet_wrap(~ Code)\n```\n\n::: {.cell-output-display}\n![](regressao_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n\n\n\n#### **EC50 com pacote DRC**\n\n##### **Modelo log-logístico de 3 parâmetros**:\n\nEsse modelo é utilizado para descrever a relação entre a dose de um agente ou tratamento e a resposta biológica observada. Ele assume que a resposta varia de forma crescente ou decrescente com o aumento da dose, seguindo uma curva sigmoide (em forma de \"S\" ou \"S\" invertido). É especialmente útil em estudos de dose-resposta, onde se espera esse tipo de comportamento não linear.\n\nO comando `drc1 <- drm(GC_mean ~ Dose, data = FGT152, fct = LL.3())` ajusta um modelo de regressão de dose-resposta utilizando a função `drm()` do pacote **`drc`**. Nesse caso:\n\n-   `GC_mean ~ Dose`: define que a variável resposta é `GC_mean` e a variável preditora é `Dose`;\n\n-   `data = FGT152`: indica que os dados utilizados estão no dataframe `FGT152`;\n\n-   `fct = LL.3()`: especifica o uso do modelo log-logístico de três parâmetros (LL.3), adequado para curvas sigmoides.\n\nApós o ajuste, o comando `AIC(drc1)` calcula o *Akaike Information Criterion (AIC)* do modelo, uma medida que considera tanto o ajuste quanto a complexidade do modelo, quanto menor o AIC, melhor o modelo.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(drc)\n\ndrc1 <- drm(GC_mean ~ Dose, data = FGT152,\n            fct = LL.3())\nAIC(drc1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 33.60846\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(drc1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nModel fitted: Log-logistic (ED50 as parameter) with lower limit at 0 (3 parms)\n\nParameter estimates:\n\n               Estimate Std. Error t-value     p-value    \nb:(Intercept)  0.401905   0.053427  7.5225    0.001672 ** \nd:(Intercept) 47.540342   1.459890 32.5643 0.000005302 ***\ne:(Intercept)  7.220130   2.340119  3.0854    0.036739 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error:\n\n 1.993805 (4 degrees of freedom)\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(drc1)\n```\n\n::: {.cell-output-display}\n![](regressao_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n:::\n\n\n\n\nO comando `ED(drc1, 50)` estima a dose efetiva necessária para alcançar 50% da resposta máxima (ED50). A função `ED()` retorna essa estimativa com base no modelo ajustado.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nED(drc1, 50)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nEstimated effective doses\n\n       Estimate Std. Error\ne:1:50   7.2201     2.3401\n```\n\n\n:::\n:::\n\n\n\n\n##### **Modelo W1.3**:\n\nApresentou o melhor ajuste aos dados com base no valor do AIC. Esse modelo oferece maior flexibilidade na modelagem da curva dose-resposta por incluir o parâmetro de assimetria (g). Esse parâmetro permite que a curva assuma formas assimétricas, ajustando-se melhor a situações em que a resposta não segue uma simetria perfeita em torno da dose efetiva, resultando em curvas sigmoides assimétricas.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndrc1 <- drm(GC_mean ~ Dose, data = FGT152,\n            fct = W1.3())\nAIC(drc1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 37.75192\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(drc1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nModel fitted: Weibull (type 1) with lower limit at 0 (3 parms)\n\nParameter estimates:\n\n              Estimate Std. Error t-value    p-value    \nb:(Intercept)  0.28354    0.04760  5.9567   0.003987 ** \nd:(Intercept) 48.38112    2.09996 23.0390 0.00002103 ***\ne:(Intercept) 30.12379   12.58003  2.3946   0.074796 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error:\n\n 2.680509 (4 degrees of freedom)\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(drc1)\n```\n\n::: {.cell-output-display}\n![](regressao_files/figure-html/unnamed-chunk-35-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nED(drc1, 50)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nEstimated effective doses\n\n       Estimate Std. Error\ne:1:50   8.2704     3.6719\n```\n\n\n:::\n:::\n\n\n\n\n##### **Pacote ec50estimator**\n\nA função `estimate_EC50()` é usada para estimar os valores de EC50 a partir dos dados disponíveis. Ela recebe diversos argumentos, cada um com um papel específico:\n\n-   `isolate_col = \"Code\"` define a coluna `\"Code\"` como identificador único para as diferentes amostras ou grupos;\n\n-   `interval = \"delta\"` especifica o tipo de intervalo de confiança a ser calculado para as estimativas de EC50;\n\n-   `fct = drc::LL.3()` indica que o modelo de ajuste utilizado é o log-logístico de três parâmetros.\n\nNo gráfico criado com `ggplot2`, dentro da função `aes()`, o argumento `(Estimate, reorder(ID, Estimate))` mapeia as variáveis para os eixos x e y. Aqui, `Estimate` representa os valores estimados de EC50, enquanto `ID` é reordenado com base nesses valores para controlar a ordem de exibição no gráfico.\n\nA função `geom_errorbar()` adiciona barras de erro ao gráfico, usando os valores `Lower` e `Upper`, que correspondem aos limites inferior e superior dos intervalos de confiança das estimativas de EC50. Por fim, o comando `xlim(0, 30)` define os limites do eixo x, restringindo a visualização das estimativas a valores entre 0 e 30.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ec50estimator)\n\ndf_ec50 <- estimate_EC50(GC_mean ~ Dose,\n                         data = dat2,\n                         isolate_col = \"Code\",\n                         interval = \"delta\",\n                         fct = drc::LL.3())\n\ndf_ec50 |>\n  ggplot(aes(Estimate, reorder(ID, Estimate)))+\n  geom_point()+\n  geom_errorbar(aes(xmin = Lower,\n                    xmax = Upper), width = 0.1)+\n  xlim(0,30)\n```\n\n::: {.cell-output-display}\n![](regressao_files/figure-html/unnamed-chunk-37-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "regressao_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}