{
  "hash": "7d7f67ef955a679e22f7479743e8f6f5",
  "result": {
    "engine": "knitr",
    "markdown": "---\nformat: html\neditor: visual\n---\n\n\n\n# **Transformação de dados no R Studio**\n\nAntes de iniciar uma análise estatística no R, pode ser necessário transformar os dados, dependendo de suas características e das exigências do método analítico escolhido. Essas transformações são úteis para adequar os dados aos pressupostos da análise estatística, como a normalidade da distribuição e a homogeneidade das variâncias.\n\nAntes de realizar transformações, precisamos entender a natureza dos dados. Vamos trabalhar com o conjunto de dados mofo, presente na planilha dados-diversos.\n\n### Importando o conjunto de dados\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readxl)\n\nmofo <- read_excel(\"dados-diversos.xlsx\", \"mofo\")\n```\n:::\n\n\n\n#### Visualização dos dados\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmofo |>\n  ggplot(aes(treat, inc)) +\n  facet_wrap(~study) +\n  geom_point(color = \"#1A8C8C\") +\n  labs(\n    x = \"Tratamento\",\n    y = \"Incidência\"\n  )\n```\n\n::: {.cell-output-display}\n![](transformacao_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\n\nHistograma para visualizar a incidência e outro para visualizar os dados de escleródio.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninc <- mofo |>\n  ggplot(aes(inc))+\n  geom_histogram(fill = \"#1A8C8C\")\n#Para o scleródio\nmofo |>\n    ggplot(aes(scl))+\n    geom_histogram(fill = \"#1A8C8C\")\n```\n\n::: {.cell-output-display}\n![](transformacao_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n\nBoxplot:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nscl <- mofo |>\n  ggplot(aes(scl))+\n  geom_boxplot()\nlibrary(patchwork)\ninc + scl\n```\n\n::: {.cell-output-display}\n![](transformacao_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\nPara achar a média podemos usar as funções \\$, mean+conjunto ou summary.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmofo$scl\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 2194 1663 1313 1177  753 1343 1519  516  643  400  643  921 1196 1331  756\n[16]  338  581  588  231  925  119  394  206  275  131  588 5013 3619 2325 2588\n[31] 3969 1556 3175 1763 2894  350  419  644 2850 6216 2888 2272 2868 2412 2372\n[46] 3424 1744 1456 1732 1080 1592 3268\n```\n\n\n:::\n\n```{.r .cell-code}\nmean(mofo$scl)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1639.096\n```\n\n\n:::\n:::\n\n\n\nOs dados podem ser transformados de diferentes formas, sendo as mais comuns log e raiz quadrada. \n\n## **Transformação logarítmica**\n\nA transformação logarítmica é uma técnica comum utilizada na análise de dados para lidar com variáveis que apresentam distribuição assimétrica ou variância heterogênea. Ela pode ajudar a estabilizar a variância, aproximar os dados de uma distribuição normal e melhorar a interpretação dos resultados estatísticos.\n\nNo RStudio, a transformação logarítmica pode ser aplicada facilmente com funções como `log()`, `log10()` (logaritmo na base 10) ou `log2()` (logaritmo na base 2), dependendo do contexto da análise. Podemos realizar essa transformação com o uso da função `mutate`. Através da função `mutate()` realizamos a criação/adição de uma nova variável (ou novas variaveis), que são funções de variáveis existentes, e também criamos/modificamos colunas.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmofo2 <- mofo |>\n  mutate (scl2 = log(scl))\n  mofo2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 52 × 6\n   study treat   inc   scl   yld  scl2\n   <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n 1     1     1    76  2194  2265  7.69\n 2     1     2    53  1663  2618  7.42\n 3     1     3    42  1313  2554  7.18\n 4     1     4    37  1177  2632  7.07\n 5     1     5    29   753  2820  6.62\n 6     1     6    42  1343  2799  7.20\n 7     1     7    55  1519  2503  7.33\n 8     1     8    40   516  2967  6.25\n 9     1     9    26   643  2965  6.47\n10     1    10    18   400  3088  5.99\n# ℹ 42 more rows\n```\n\n\n:::\n:::\n\n\n\n### Visualizar os dados tranformados\n\nHistograma\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmofo2 |>\n  ggplot(aes(scl2)) +\n  geom_histogram(bins = 10, fill = \"#1A8C8C\", color = \"black\")\n```\n\n::: {.cell-output-display}\n![](transformacao_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n## Transformação em raiz quadrada\n\nA transformação em raiz quadrada é uma técnica estatística utilizada para corrigir assimetrias nos dados e estabilizar a variância, especialmente quando os dados representam contagens ou variáveis discretas com distribuição assimétrica.\n\nEsse tipo de transformação é útil quando os dados apresentam variância crescente com a média, o que viola pressupostos importantes de muitos testes estatísticos, como a ANOVA e o teste t.\n\nNo RStudio, a transformação em raiz quadrada pode ser feita com a função `sqrt()`:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmofo2 <- mofo |>\n  mutate (scl2 = sqrt(scl))\n  mofo2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 52 × 6\n   study treat   inc   scl   yld  scl2\n   <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n 1     1     1    76  2194  2265  46.8\n 2     1     2    53  1663  2618  40.8\n 3     1     3    42  1313  2554  36.2\n 4     1     4    37  1177  2632  34.3\n 5     1     5    29   753  2820  27.4\n 6     1     6    42  1343  2799  36.6\n 7     1     7    55  1519  2503  39.0\n 8     1     8    40   516  2967  22.7\n 9     1     9    26   643  2965  25.4\n10     1    10    18   400  3088  20  \n# ℹ 42 more rows\n```\n\n\n:::\n:::\n\n\n\n### Visualizar os dados tranformados\n\nHistograma\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  mofo2 |>\n    ggplot(aes(scl2))+\n    geom_histogram(bins = 10, fill = \"#1A8C8C\", color = \"black\")\n```\n\n::: {.cell-output-display}\n![](transformacao_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n## **Transformação de dados Box-Cox**\n\nA transformação de Box-Cox é uma técnica estatística utilizada para estabilizar a variância e aproximar os dados de uma distribuição normal. Diferente de outras transformações fixas, como log ou raiz quadrada, a Box-Cox aplica uma família de transformações parametrizadas, permitindo encontrar automaticamente o melhor ajuste aos pressupostos dos modelos estatísticos.\n\nEla é especialmente útil quando não se sabe previamente qual transformação aplicar, pois estima um parâmetro lambda (λ) que define a forma ideal da transformação.\n\nA transformação de Box-Cox é definida pela seguinte equação: y(lambda) = (x\\^lambda - 1) / lambda\n\nNessa equação, “x” representa a variável original, “y(lambda)” representa a variável transformada para um determinado valor de lambda e “lambda” é o parâmetro de transformação que varia de -∞ a +∞. O valor de lambda determina o tipo de transformação aplicada: Se lambda = 0, a transformação de Box-Cox é equivalente ao logaritmo natural (ln). Se lambda = 1, a transformação de Box-Cox é equivalente à transformação linear (sem transformação). Se lambda \\< 0, é aplicada uma transformação inversa.\n\nA transformação Box-Cox pode ser aplicada usando a função `boxcox()` do pacote `MASS.`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(MASS)\n```\n:::\n\n\n\n**Exemplo:** *InsectSprays*, do próprio R. A função `boxcox()` pode ser utilizada para calcular a transformação de Box-Cox e identificar o valor de lambda ótimo para uma determinada variável. Essa função retorna uma lista de resultados, incluindo o valor de lambda ótimo e gráficos de diagnóstico.\n\n### Importando dados\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninsects <- InsectSprays\n\nb <- boxcox(lm(insects$count+0.1 ~1))\n```\n\n::: {.cell-output-display}\n![](transformacao_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlambda <- b$x[which.max(b$y)]\nlambda\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.4242424\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ninsects$count2 <- (insects$count ^ lambda - 1) / lambda\n\nhist(insects$count, \n     col = \"#1A8C8C\",        # cor do histograma\n     main = \"Histograma de Count Transformado\", \n     xlab = \"Contagem Transformada\")\n```\n\n::: {.cell-output-display}\n![](transformacao_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(insects$count2,\n     col = \"#1A8C8C\",\n     main = \"Histograma de Count2 Transformado\", \n     xlab = \"Contagem Transformada\"\n)\n```\n\n::: {.cell-output-display}\n![](transformacao_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "transformacao_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}